{
	"name": "psi-header",
	"displayName": "psioniq File Header",
	"description": "Configurable file header and changes tracking.",
	"icon": "img/psi-logo.png",
	"version": "1.22.0",
	"publisher": "psioniq",
	"license": "SEE LICENSE IN LICENSE.txt",
	"bugs": {
		"url": "https://github.com/davidquinn/psi-header/issues",
		"email": "info@psioniq.uk"
	},
	"homepage": "https://github.com/davidquinn/psi-header/blob/main/README.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/davidquinn/psi-header"
	},
	"engines": {
		"vscode": "^1.6.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"header",
		"file header",
		"license",
		"file info"
	],
	"activationEvents": [
		"onCommand:psi-header.insertFileHeader",
		"onCommand:psi-header.insertChangeLog",
		"onStartupFinished"
	],
	"main": "./out/src/extension",
	"contributes": {
		"commands": [
			{
				"command": "psi-header.insertFileHeader",
				"title": "Header Insert"
			},
			{
				"command": "psi-header.insertChangeLog",
				"title": "Header Change Log Insert"
			}
		],
		"keybindings": [
			{
				"command": "psi-header.insertFileHeader",
				"key": "ctrl+alt+H ctrl+alt+H"
			},
			{
				"command": "psi-header.insertChangeLog",
				"key": "ctrl+alt+C ctrl+alt+C"
			}
		],
		"configuration": {
			"type": "object",
			"title": "psioniq File Header",
			"properties": {
				"psi-header.config": {
					"type": "object",
					"description": "An optional set of global configuration options.",
					"properties": {
						"forceToTop": {
							"type": "boolean",
							"description": "If true, the header is inserted at the top of the page, otherwise it is inserted at the cursor.",
							"default": false
						},
						"blankLinesAfter": {
							"type": "integer",
							"description": "The number of blank lines to insert after the header comment.",
							"default": 0
						},
						"spacesBetweenYears": {
							"type": "boolean",
							"description": "If true, include spaces between years (\"YYYY - YYYY\"), otherwise omit spaces (\"YYYY-YYYY\")",
							"default": true
						},
						"license": {
							"type": "string",
							"description": "Identifies which license to use.  this should be either a SPDX license (refer to https://spdx.org/licenses/) or \"Custom\" or \"CustomUri\".",
							"default": "MIT"
						},
						"author": {
							"type": "string",
							"description": "Your name"
						},
						"authorEmail": {
							"type": "string",
							"description": "Your email address"
						},
						"company": {
							"type": "string",
							"description": "Your company name"
						},
						"copyrightHolder": {
							"type": "string",
							"description": "Used to identify who owns the copyright.  If not provided it defaults to the value for company if that exists."
						},
						"initials": {
							"type": "string",
							"description": "Your initials"
						},
						"ignoreAuthorFullName": {
							"type": "boolean",
							"description": "If true, will not use fullname when determining author name.",
							"default": false
						},
						"creationDateZero": {
							"type": "string",
							"enum": [
								"asIs",
								"blank",
								"now"
							],
							"description": "How to treat file creation dates returned as Unix zero",
							"default": "asIs"
						},
						"hostname": {
							"type": "string",
							"description": "Override the local machine's hostname for the <<hostname>> variable."
						}
					}
				},
				"psi-header.changes-tracking": {
					"type": "object",
					"description": "An optional set of changes tracking options",
					"properties": {
						"isActive": {
							"type": "boolean",
							"description": "If true, will activate changes tracking when documents are saved.  Otherwise changes tracking is not performed.",
							"default": false
						},
						"modAuthor": {
							"type": "string",
							"description": "The label used to identify the template line that contains the name of the user who modified the file.",
							"default": "Modified By: "
						},
						"modDate": {
							"type": "string",
							"description": "The label used to identify the template line that contains the date that the file was last modified.",
							"default": "Date Modified: "
						},
						"modDateFormat": {
							"type": "string",
							"description": "The date fomat string for the modified date.  Either 'date' for the standard system date (same as the 'date' placeholder) or a MomentJS format string.",
							"default": "date"
						},
						"include": {
							"type": "array",
							"description": "An array of VSC language IDs to define which file types should be tracked.",
							"default": [],
							"items": {
								"type": "string"
							}
						},
						"exclude": {
							"type": "array",
							"description": "An array of VSC language IDs to define which file types should not be tracked.",
							"default": [],
							"items": {
								"type": "string"
							}
						},
						"includeGlob": {
							"type": "array",
							"description": "An array of file globs to define which files should be tracked.",
							"default": [],
							"items": {
								"type": "string"
							}
						},
						"excludeGlob": {
							"type": "array",
							"description": "An array of file globs to define which files should not be tracked.",
							"default": [],
							"items": {
								"type": "string"
							}
						},
						"autoHeader": {
							"type": "string",
							"enum": [
								"off",
								"manualSave",
								"autoSave"
							],
							"description": "Setting for automatic header creation in new files. Valid values are 'off': (default) no auto header; 'manualSave': header is added but not saved; 'autoSave': header is added and immediately saved to file.",
							"default": "off"
						},
						"replace": {
							"type": "array",
							"description": "An array of template line prefixes that define lines that should be replaced during a save.",
							"default": [],
							"items": {
								"type": "string"
							}
						},
						"enforceHeader": {
							"type": "boolean",
							"description": "If true, will automatically insert a header during save if none exists.",
							"default": false
						},
						"updateLicenseVariables": {
							"type": "boolean",
							"description": "If true, will process license variables during change tracking saves.",
							"default": false
						}
					}
				},
				"psi-header.license-text": {
					"type": "array",
					"description": "Custom license text used where psi-header.config.license = Custom",
					"default": [],
					"items": {
						"type": "string"
					}
				},
				"psi-header.license-reference": {
					"type": "object",
					"description": "Custom license uri used where psi-header.config.license = CustomUri",
					"properties": {
						"uri": {
							"type": "string",
							"description": "The basename of a local file on the same path as the edited file, or a fully qualified local file name or a url.",
							"default": null
						},
						"uriIsLocalFile": {
							"type": "boolean",
							"description": "If true, will assume the uri is to a local file, else will assume a fully qualified web URL.",
							"default": false
						}
					}
				},
				"psi-header.variables": {
					"type": "array",
					"description": "An array of key value pairs that define the template variables.",
					"default": [],
					"items": {
						"type": "array",
						"minItems": 2,
						"maxItems": 2
					}
				},
				"psi-header.lang-config": {
					"type": "array",
					"description": "An optional set of language-specific syntax settings.",
					"default": [],
					"items": {
						"type": "object",
						"required": [
							"language"
						],
						"properties": {
							"language": {
								"type": "string",
								"description": "The language that this entry applies to, or '*' for the default."
							},
							"mapTo": {
								"type": "string",
								"description": "The name of the language to copy settings from.  All other settings are ignored if this one is provided."
							},
							"begin": {
								"type": "string",
								"default": "/*",
								"description": "The string that defines the beginning of the header comment block."
							},
							"prefix": {
								"type": "string",
								"default": " * ",
								"description": "The string that defines the beginning of each line of the header comment block."
							},
							"suffix": {
								"type": "string",
								"description": "An optional line end suffix that allows for block-style comment headers."
							},
							"lineLength": {
								"type": "number",
								"description": "An optional line length specifier used along with the suffix for block-style comment headers."
							},
							"end": {
								"type": "string",
								"default": " */",
								"description": "The string that defines the end of the header comment block."
							},
							"forceToTop": {
								"type": "boolean",
								"default": false,
								"description": "Overrides the global setting for this language."
							},
							"blankLinesAfter": {
								"type": "integer",
								"description": "Overrides the global setting for this language.",
								"default": 0
							},
							"beforeHeader": {
								"type": "array",
								"description": "Optional lines of text to be inserted before the header",
								"default": [],
								"items": {
									"type": "string"
								}
							},
							"afterHeader": {
								"type": "array",
								"description": "Optional lines of text to be inserted after the header",
								"default": [],
								"items": {
									"type": "string"
								}
							},
							"rootDirFileName": {
								"type": "string",
								"default": "package.json",
								"description": "Optional name of a file to help identify the project root directory.  This file should only be expected in the root directory."
							},
							"modAuthor": {
								"type": "string",
								"description": "Optional. Overrides the modAuthor changes tracking setting for this language.  The label used to identify the template line that contains the name of the user who modified the file."
							},
							"modDate": {
								"type": "string",
								"description": "Optional. Overrides the modDate changes tracking setting for this language.  The label used to identify the template line that contains the date that the file was last modified."
							},
							"modDateFormat": {
								"type": "string",
								"description": "Optional. Overrides the modDateFormat changes tracking setting for this language.  The date fomat string for the modified date.  Either 'date' for the standard system date (same as the 'date' placeholder) or a MomentJS format string."
							},
							"replace": {
								"type": "array",
								"description": "Optional. Overrides the modDateFormat changes tracking setting for this language.  An array of template line prefixes that define lines that should be replaced during a save.",
								"items": {
									"type": "string"
								}
							},
							"ignoreLines": {
								"type": "array",
								"description": "Optional.  Ignore non-comment lines that start with this text when trying to work out if the file already has a header.",
								"items": {
									"type": "string"
								}
							}
						}
					}
				},
				"psi-header.templates": {
					"type": "array",
					"description": "An optional set of language-specific templates",
					"default": [],
					"items": {
						"type": "object",
						"required": [
							"language"
						],
						"properties": {
							"language": {
								"type": "string",
								"description": "The language that this entry applies to, or '*' for the default."
							},
							"mapTo": {
								"type": "string",
								"description": "The name of the language to copy the template from.  All other settings are ignored if this one is provided."
							},
							"template": {
								"type": "array",
								"default": [],
								"description": "The template text provided as an array of strings.",
								"items": {
									"type": "string"
								}
							},
							"changeLogCaption": {
								"type": "string",
								"description": "Defines the caption for the change log and is used to identify where the change log starts.",
								"default": "HISTORY:"
							},
							"changeLogHeaderLineCount": {
								"type": "integer",
								"description": "How many lines are there between the change log caption and the log items?  Useful if you want to add column headings above the items.  Only used where changeLogNaturalOrder is false.",
								"default": 0
							},
							"changeLogFooterLineCount": {
								"type": "integer",
								"description": "How many lines are there between the log items and bottom of the header?  Only used where changeLogNaturalOrder is true.",
								"default": 0
							},
							"changeLogEntryTemplate": {
								"type": "array",
								"description": "The template text for a single change log item provided as an array of strings.",
								"items": {
									"type": "string"
								},
								"default": [
									"<<dateformat('YYYY-MM-DD')>>\t<<initials>>\t"
								]
							},
							"changeLogNaturalOrder": {
								"type": "boolean",
								"default": false,
								"description": "Add change log entries in chronological order (earliest entry first)."
							}
						}
					}
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "tsc -p ./",
		"compile": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "node ./node_modules/vscode/bin/test"
	},
	"devDependencies": {
		"@types/mocha": "^9.1.1",
		"@types/node": "^18.7.13",
		"mocha": "^10.0.0",
		"typescript": "^4.8.2",
		"vscode": "^1.1.37",
		"@types/username": "^5.0.0"
	},
	"dependencies": {
		"fullname": "^4.0.1",
		"minimatch": "^7.4.2",
		"moment": "^2.29.4",
		"spdx-license-list": "^6.6.0",
		"username": "^5.0.0",
		"wordwrap": "^1.0.0"
	}
}